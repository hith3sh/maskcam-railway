# Compiler to use
CC = g++

# Target executable name
TARGET = deepstream_app

# Source file
SOURCES = deepstream_app.cpp

# Object file
OBJECTS = $(SOURCES:.cpp=.o)

# Compiler flagCFLAGS = -Wall -g $(shell pkg-config --cflags gstreamer-1.0)

# Linker flags (include GStreamer and DeepStream libraries)
LDFLAGS = $(shell pkg-config --libs gstreamer-1.0) \
          -L/usr/local/deepstream/lib -lnvds_logger -lnvds_utils \
          -Wl,-rpath=/usr/local/deepstream/lib

# DeepStream and GStreamer include paths (adjust if needed)
INCLUDES = -I/usr/local/deepstream/include \
           -I/usr/include/gstreamer-1.0 \
           -I/usr/include/glib-2.0 \
           -I/usr/lib/x86_64-linux-gnu/glib-2.0/include

# Default target
all: $(TARGET)

# Link object files to create the executable
$(TARGET): $(OBJECTS)
	$(CC) $(OBJECTS) -o $(TARGET) $(LDFLAGS)

# Compile source files to object files
.cpp.o:
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Clean up
clean:
	rm -f $(OBJECTS) $(TARGET)

# Phony targets
.PHONY: all clean
